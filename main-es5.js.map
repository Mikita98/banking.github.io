{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/components/confirm-dialog/confirm-dialog.component.html","webpack:///src/app/components/create-edit-user/create-edit-user.component.ts","webpack:///src/app/components/create-edit-user/create-edit-user.component.html","webpack:///src/app/constants/clients.constant.ts","webpack:///src/app/services/client.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","clientService","snackBar","dialog","title","clients","displayedColumns","dataSource","setDataSortAccessor","getClients","loading","pipe","subscribe","data","dialogRef","open","width","mode","CREATE","afterClosed","created","client","confirmed","deleteClient","_id","filter","item","duration","INFO","index","toString","EDIT","user","map","event","filterValue","target","value","trim","toLowerCase","sortingDataAccessor","property","console","log","lastName","passportSeries","sex","sort","paginator","openAddClientModal","selector","templateUrl","styleUrls","static","AppModule","declarations","imports","providers","bootstrap","ConfirmDialogComponent","close","confirm","CreateEditUserComponent","MODES","SEXES","CITIES","citiesValues","Object","values","CITIZENSHIP","citizenshipValues","MARTIAL_STATUS","martialStatusValues","DISABILITY","disabilityValues","buildForm","clientForm","disabled","required","minLength","firstName","middleName","birthDay","MALE","maxLength","passportNumber","pattern","passportIssuer","passportIssueDate","idNumber","birthPlace","currentCity","currentAddress","mobilePhone","email","registeredCity","martialStatus","citizenship","disability","retired","monthlyIncome","createUser","updateUser","createClient","updateClient","ClientService","http","BASE_URL","get","post","clientId","delete","put","providedIn","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ClientService} from './services/client.service';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {IClient} from './interfaces/clients.interface';\r\nimport {DataSource} from '@angular/cdk/collections';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {CreateEditUserComponent} from './components/create-edit-user/create-edit-user.component';\r\nimport {MODES} from './constants/clients.constant';\r\nimport {ConfirmDialogComponent} from './components/confirm-dialog/confirm-dialog.component';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'Bank App';\r\n  public loading: boolean;\r\n  public clients: IClient[] = [];\r\n  public displayedColumns = [\r\n    'firstName', 'lastName',  'sex', 'mobilePhone', 'currentCity', 'actions'\r\n  ];\r\n  public dataSource = new MatTableDataSource<IClient>();\r\n\r\n  @ViewChild(MatSort, {static: false}) set matSort(sort: MatSort) {\r\n    this.dataSource.sort = sort;\r\n  }\r\n\r\n  @ViewChild(MatPaginator, {static: false}) set matPaginator(paginator: MatPaginator) {\r\n    this.dataSource.paginator = paginator;\r\n  }\r\n\r\n  constructor(private readonly clientService: ClientService,\r\n              private readonly snackBar: MatSnackBar,\r\n              private readonly dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setDataSortAccessor();\r\n    this.getClients();\r\n  }\r\n\r\n  private getClients(): void {\r\n    this.loading = true;\r\n    this.clientService.getClients()\r\n    .pipe(finalize(() => this.loading = false))\r\n    .subscribe(clients => {\r\n      this.clients = clients;\r\n      this.dataSource.data = this.clients;\r\n    });\r\n  }\r\n\r\n  public openAddClientModal(): void {\r\n    const dialogRef = this.dialog.open(CreateEditUserComponent, {\r\n      width: '650px',\r\n      data: {\r\n        mode: MODES.CREATE,\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed()\r\n    .subscribe((created) => {\r\n      if (created) {\r\n        this.getClients();\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteClient(client: IClient): void {\r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      data: client,\r\n      width: '600px'\r\n    });\r\n\r\n    dialogRef.afterClosed()\r\n    .subscribe(confirmed => {\r\n      if (confirmed) {\r\n        this.clientService.deleteClient(client._id)\r\n        .subscribe(() => {\r\n          this.clients = this.clients.filter(item => item._id !== client._id);\r\n          this.dataSource.data = this.clients;\r\n          this.snackBar.open('Аккаунт удалён', null, { duration: 3000 } );\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public openInfo(client: IClient): void {\r\n    this.dialog.open(CreateEditUserComponent, {\r\n      width: '650px',\r\n      data: {\r\n        mode: MODES.INFO,\r\n        client\r\n      }\r\n    });\r\n  }\r\n\r\n  trackBy(index: number, item: IClient): string {\r\n    return item?._id || index.toString();\r\n  }\r\n\r\n  public editUser(client: IClient): void {\r\n    const dialogRef = this.dialog.open(CreateEditUserComponent, {\r\n      width: '650px',\r\n      data: {\r\n        mode: MODES.EDIT,\r\n        client\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed()\r\n    .subscribe(user => {\r\n      if (user) {\r\n        this.clients = this.clients.map(item => item._id === user._id ? user : item);\r\n        this.dataSource.data = this.clients;\r\n      }\r\n    });\r\n  }\r\n\r\n  public applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  private setDataSortAccessor(): void {\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      console.log(item[property]);\r\n      switch (property) {\r\n        case 'lastName': {\r\n          return item.lastName.toLowerCase();\r\n        }\r\n        case 'passportSeries': {\r\n          return item.passportSeries.toLowerCase();\r\n        }\r\n        case 'sex': {\r\n          return item.sex;\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\"\r\n             fxLayout=\"row\"\r\n             fxLayoutAlign=\"space-around center\"\r\n             class=\"mat-elevation-z8\">\r\n  <p>Список аккаунтов банка</p>\r\n\r\n  <button mat-raised-button (click)=\"openAddClientModal()\">\r\n    <mat-icon>add</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n<ng-container *ngIf=\"loading\" >\r\n  <div fxFlexFill fxLayoutAlign=\"center center\">\r\n    <mat-spinner color=\"accent\" diameter=\"50\">\r\n    </mat-spinner>\r\n  </div>\r\n</ng-container>\r\n\r\n\r\n<ng-container *ngIf=\"!loading\">\r\n  <div class=\"mat-elevation-z8\">\r\n    <mat-table [dataSource]=\"dataSource\" [trackBy]=\"trackBy\" matSort>\r\n      <ng-container matColumnDef=\"firstName\">\r\n        <mat-header-cell fxFlex=\"0 1 15%\" *matHeaderCellDef>\r\n          Имя\r\n        </mat-header-cell>\r\n        <mat-cell fxFlex=\"0 1 15%\" *matCellDef=\"let element\">\r\n          {{element.firstName}}\r\n        </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"lastName\">\r\n        <mat-header-cell fxFlex=\"0 1 15%\" *matHeaderCellDef mat-sort-header>\r\n          Фамилия\r\n        </mat-header-cell>\r\n        <mat-cell fxFlex=\"0 1 15%\" *matCellDef=\"let element\">\r\n          {{element.lastName}}\r\n        </mat-cell>\r\n      </ng-container>\r\n<!--      <ng-container matColumnDef=\"currentCity\">-->\r\n<!--        <mat-header-cell fxFlex=\"0 1 10%\" *matHeaderCellDef>-->\r\n<!--          Город проживания-->\r\n<!--        </mat-header-cell>-->\r\n<!--        <mat-cell fxFlex=\"0 1 10%\" *matCellDef=\"let element\">-->\r\n<!--          {{element.currentCity}}-->\r\n<!--        </mat-cell>-->\r\n<!--      </ng-container>-->\r\n      <ng-container matColumnDef=\"sex\">\r\n        <mat-header-cell fxFlex=\"0 1 5%\" *matHeaderCellDef mat-sort-header>\r\n          Пол\r\n        </mat-header-cell>\r\n        <mat-cell fxFlex=\"0 1 5%\" *matCellDef=\"let element\">\r\n          {{element.sex}}\r\n        </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"mobilePhone\">\r\n        <mat-header-cell fxFlex=\"0 1 15%\" *matHeaderCellDef>\r\n          Номер телефона\r\n        </mat-header-cell>\r\n        <mat-cell fxFlex=\"0 1 15%\" *matCellDef=\"let element\">\r\n          {{element.mobilePhone}}\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"currentCity\">\r\n        <mat-header-cell fxFlex=\"0 1 15%\" *matHeaderCellDef>\r\n          Город проживания\r\n        </mat-header-cell>\r\n        <mat-cell fxFlex=\"0 1 15%\" *matCellDef=\"let element\">\r\n          {{element.currentCity}}\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"actions\">\r\n        <mat-header-cell class=\"actions-column\" *matHeaderCellDef></mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\" class=\"actions-column\">\r\n          <mat-chip-list>\r\n            <mat-chip color=\"primary\"\r\n                      (click)=\"openInfo(element)\"\r\n                      matTooltip=\"Подробная информация\">\r\n              <mat-icon>info</mat-icon>\r\n            </mat-chip>\r\n            <mat-chip color=\"primary\"\r\n                      (click)=\"editUser(element)\"\r\n                      matTooltip=\"Редактировать\">\r\n              <mat-icon>edit</mat-icon>\r\n            </mat-chip>\r\n            <mat-chip color=\"primary\"\r\n                      (click)=\"deleteClient(element)\"\r\n                      matTooltip=\"Удалить клиента\">\r\n              <mat-icon>delete</mat-icon>\r\n            </mat-chip>\r\n          </mat-chip-list>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n</ng-container>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport { CreateEditUserComponent } from './components/create-edit-user/create-edit-user.component';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CreateEditUserComponent,\r\n    ConfirmDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n\r\n    MatToolbarModule,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatPaginatorModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {IClient} from '../../interfaces/clients.interface';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n\r\n  constructor(private readonly dialogRef: MatDialogRef<ConfirmDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: IClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public confirm(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Подтвердите действие</h1>\r\n\r\n<div mat-dialog-content>\r\n  <p>Вы уверены что хотите удалить клиента (ФИО: {{data.lastName + ' ' + data.firstName + ' ' + data.middleName}})? Это действие невозможно отменить!</p>\r\n</div>\r\n\r\n<div mat-dialog-actions fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"flex-end\">\r\n  <button mat-button mat-dialog-close>Отменить</button>\r\n  <button mat-raised-button\r\n          (click)=\"confirm()\"\r\n          color=\"primary\">Подтвердить</button>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {IClient, IDialogData} from '../../interfaces/clients.interface';\r\nimport {CITIES, CITIZENSHIP, DISABILITY, MARTIAL_STATUS, MODES, SEXES} from '../../constants/clients.constant';\r\nimport {ClientService} from '../../services/client.service';\r\nimport {finalize} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-create-edit-user',\r\n  templateUrl: './create-edit-user.component.html',\r\n  styleUrls: ['./create-edit-user.component.scss']\r\n})\r\nexport class CreateEditUserComponent implements OnInit {\r\n  public clientForm: FormGroup;\r\n  public loading: boolean;\r\n  public readonly mode: MODES;\r\n  public readonly MODES = MODES;\r\n  public readonly SEXES = SEXES;\r\n  public readonly CITIES = CITIES;\r\n  public readonly citiesValues = Object.values(CITIES);\r\n  public readonly CITIZENSHIP = CITIZENSHIP;\r\n  public readonly citizenshipValues = Object.values(this.CITIZENSHIP);\r\n  public readonly MARTIAL_STATUS = MARTIAL_STATUS;\r\n  public readonly martialStatusValues = Object.values(MARTIAL_STATUS);\r\n  public readonly DISABILITY = DISABILITY;\r\n  public readonly disabilityValues = Object.values(DISABILITY);\r\n\r\n  constructor(private readonly dialogRef: MatDialogRef<CreateEditUserComponent>,\r\n              private readonly clientService: ClientService,\r\n              @Inject(MAT_DIALOG_DATA) private readonly data: IDialogData) {\r\n    this.mode = data.mode;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm(this.data.mode, this.data.client);\r\n  }\r\n\r\n  private buildForm(mode: MODES, client?: IClient): void {\r\n    this.clientForm = new FormGroup({\r\n      lastName: new FormControl(\r\n        { value: client ? client.lastName : '', disabled: mode === MODES.INFO},\r\n        [Validators.required, Validators.minLength(2)]\r\n      ),\r\n      firstName: new FormControl(\r\n        { value: client ? client.firstName : '', disabled: mode === MODES.INFO},\r\n        [Validators.required, Validators.minLength(2)]\r\n      ),\r\n      middleName: new FormControl(\r\n        { value: client ? client.middleName : '', disabled: mode === MODES.INFO},\r\n        [Validators.required, Validators.minLength(2)]\r\n      ),\r\n      birthDay: new FormControl(\r\n        { value: client ? client.birthDay : '', disabled: mode === MODES.INFO},\r\n        [Validators.required]\r\n      ),\r\n      sex: new FormControl(\r\n        { value: client ? client.sex : SEXES.MALE, disabled: mode === MODES.INFO},\r\n        [Validators.required]\r\n      ),\r\n      passportSeries: new FormControl(\r\n        { value: client ? client.passportSeries : '', disabled: mode === MODES.INFO},\r\n        [Validators.required, Validators.minLength(2), Validators.maxLength(2)]\r\n      ),\r\n      passportNumber: new FormControl(\r\n        { value: client ? client.passportNumber : '', disabled: mode === MODES.INFO},\r\n        [Validators.required, Validators.minLength(7), Validators.maxLength(7), Validators.pattern('[0-9]*')]\r\n      ),\r\n      passportIssuer: new FormControl(\r\n        { value: client ? client.passportIssuer : '', disabled: mode === MODES.INFO},\r\n        [Validators.required]\r\n      ),\r\n      passportIssueDate: new FormControl(\r\n        { value: client ? client.passportIssueDate : '', disabled: mode === MODES.INFO},\r\n        [Validators.required]\r\n      ),\r\n      idNumber: new FormControl(\r\n        { value: client ? client.idNumber : '', disabled: mode === MODES.INFO},\r\n        [Validators.required, Validators.minLength(14), Validators.maxLength(14)]\r\n      ),\r\n      birthPlace: new FormControl(\r\n        { value: client ? client.birthPlace : '', disabled: mode === MODES.INFO},\r\n        [Validators.required]\r\n      ),\r\n      currentCity: new FormControl(\r\n        { value: client ? client.currentCity : '', disabled: mode === MODES.INFO},\r\n        [Validators.required]\r\n      ),\r\n      currentAddress: new FormControl(\r\n        { value: client ? client.currentAddress : '', disabled: mode === MODES.INFO},\r\n        [Validators.required]\r\n      ),\r\n      mobilePhone: new FormControl({ value: client ? client.mobilePhone : '', disabled: mode === MODES.INFO}),\r\n      email: new FormControl({ value: client ? client.email : '', disabled: mode === MODES.INFO}, [Validators.email]),\r\n      registeredCity: new FormControl(\r\n        { value: client ? client.registeredCity : '', disabled: mode === MODES.INFO},\r\n        [Validators.required]\r\n      ),\r\n      martialStatus: new FormControl(\r\n        { value: client ? client.martialStatus : '', disabled: mode === MODES.INFO},\r\n        [Validators.required]\r\n      ),\r\n      citizenship: new FormControl(\r\n        { value: client ? client.citizenship : '', disabled: mode === MODES.INFO},\r\n        [Validators.required]\r\n      ),\r\n      disability: new FormControl({ value: client ? client.disability : null, disabled: mode === MODES.INFO}),\r\n      retired: new FormControl({ value: client ? client.retired : false, disabled: mode === MODES.INFO}),\r\n      monthlyIncome: new FormControl({ value: client ? client.monthlyIncome : '', disabled: mode === MODES.INFO}),\r\n    });\r\n  }\r\n\r\n  public performAction(): void {\r\n    this.loading = true;\r\n    if (this.mode === MODES.CREATE) {\r\n      this.createUser();\r\n    } else {\r\n      this.updateUser();\r\n    }\r\n  }\r\n\r\n  private createUser(): void {\r\n    this.clientService.createClient(this.clientForm.value)\r\n    .pipe(finalize(() => this.loading = false))\r\n    .subscribe(user => {\r\n      this.dialogRef.close(user);\r\n    });\r\n  }\r\n\r\n  private updateUser(): void {\r\n    this.clientService.updateClient(this.data.client._id, this.clientForm.value)\r\n    .pipe(finalize(() => this.loading = false))\r\n    .subscribe(user => {\r\n      this.dialogRef.close(user);\r\n    });\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>\r\n  {{ mode === MODES.CREATE\r\n      ? 'Создание клиента'\r\n      : mode === MODES.EDIT\r\n        ? 'Редактирование клиента'\r\n        : 'Подробная информация о клиенте'\r\n  }}\r\n</h1>\r\n\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"clientForm\" fxLayout=\"column\">\r\n    <mat-form-field>\r\n      <mat-label>Фамилия</mat-label>\r\n      <input matInput formControlName=\"lastName\" placeholder=\"Введите Вашу фамилию\" required>\r\n      <mat-error *ngIf=\"clientForm.controls.lastName.hasError('required')\">\r\n        Это поле является <strong>обязательным</strong>\r\n      </mat-error>\r\n      <mat-error *ngIf=\"clientForm.controls.lastName.hasError('minlength')\">\r\n        Фамилия должна быть хотя бы 2 символа\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <mat-label>Имя</mat-label>\r\n      <input matInput formControlName=\"firstName\" placeholder=\"Введите Ваше имя\" required>\r\n      <mat-error *ngIf=\"clientForm.controls.firstName.hasError('required')\">\r\n        Это поле является <strong>обязательным</strong>\r\n      </mat-error>\r\n      <mat-error *ngIf=\"clientForm.controls.firstName.hasError('minlength')\">\r\n        Имя должно быть хотя бы 2 символа\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <mat-label>Отчество</mat-label>\r\n      <input matInput formControlName=\"middleName\" placeholder=\"Введите Ваше отчество\" required>\r\n      <mat-error *ngIf=\"clientForm.controls.middleName.hasError('required')\">\r\n        Это поле является <strong>обязательным</strong>\r\n      </mat-error>\r\n      <mat-error *ngIf=\"clientForm.controls.middleName.hasError('minlength')\">\r\n        Отчество должно быть хотя бы 2 символа\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Дата рождения</mat-label>\r\n      <input matInput [matDatepicker]=\"picker\" placeholder=\"Выберете дату рождения\" formControlName=\"birthDay\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n    </mat-form-field>\r\n\r\n    <mat-radio-group formControlName=\"sex\" required fxLayoutGap=\"10px\">\r\n      <mat-radio-button [value]=\"SEXES.MALE\">{{SEXES.MALE}}</mat-radio-button>\r\n      <mat-radio-button [value]=\"SEXES.FEMALE\">{{SEXES.FEMALE}}</mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Серия паспорта</mat-label>\r\n      <input matInput formControlName=\"passportSeries\" placeholder=\"Введите серию паспорта\" required>\r\n      <mat-error *ngIf=\"clientForm.controls.passportSeries.hasError('required')\">\r\n        Это поле является <strong>обязательным</strong>\r\n      </mat-error>\r\n      <mat-error *ngIf=\"clientForm.controls.passportSeries.hasError('minlength')\">\r\n        Серия паспорта должно быть 2 символа\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Номер паспорта</mat-label>\r\n      <input matInput formControlName=\"passportNumber\" placeholder=\"Введите номер паспорта\" required>\r\n      <mat-error *ngIf=\"clientForm.controls.passportNumber.hasError('required')\">\r\n        Это поле является <strong>обязательным</strong>\r\n      </mat-error>\r\n      <mat-error *ngIf=\"clientForm.controls.passportNumber.hasError('minlength')\">\r\n        Номер паспорта должен быть 7 символов\r\n      </mat-error>\r\n      <mat-error *ngIf=\"clientForm.controls.passportNumber.hasError('maxlength')\">\r\n        Номер паспорта должен быть 7 символов\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Паспорт выдан</mat-label>\r\n      <input matInput formControlName=\"passportIssuer\" placeholder=\"Введите кем выдан паспорт\" required>\r\n      <mat-error *ngIf=\"clientForm.controls.passportIssuer.hasError('required')\">\r\n        Это поле является <strong>обязательным</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Дата выдачи паспорта</mat-label>\r\n      <input matInput [matDatepicker]=\"picker1\" placeholder=\"Выберете дату выдачи паспорта\" formControlName=\"passportIssueDate\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker1></mat-datepicker>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>ID паспорта</mat-label>\r\n      <input matInput formControlName=\"idNumber\" placeholder=\"Введите ID паспорта\" required>\r\n      <mat-error *ngIf=\"clientForm.controls.idNumber.hasError('required')\">\r\n        Это поле является <strong>обязательным</strong>\r\n      </mat-error>\r\n      <mat-error *ngIf=\"clientForm.controls.idNumber.hasError('minlength')\">\r\n        Серия паспорта должно быть 14 символа\r\n      </mat-error>\r\n      <mat-error *ngIf=\"clientForm.controls.idNumber.hasError('maxlength')\">\r\n        Серия паспорта должно быть 14 символа\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Место рождения</mat-label>\r\n      <input matInput formControlName=\"birthPlace\" placeholder=\"Введите место рождения\" required>\r\n      <mat-error *ngIf=\"clientForm.controls.birthPlace.hasError('required')\">\r\n        Это поле является <strong>обязательным</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Город проживания</mat-label>\r\n      <mat-select formControlName=\"currentCity\" required>\r\n        <mat-option *ngFor=\"let city of citiesValues\" [value]=\"city\">\r\n          {{city}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Адрес рождения</mat-label>\r\n      <input matInput formControlName=\"currentAddress\" placeholder=\"Введите адрес проживания\" required>\r\n      <mat-error *ngIf=\"clientForm.controls.currentAddress.hasError('required')\">\r\n        Это поле является <strong>обязательным</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Мобильный телефон</mat-label>\r\n      <input matInput formControlName=\"mobilePhone\" placeholder=\"Введите ваш мобильный телефон\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Электронная почта</mat-label>\r\n      <input type=\"email\" matInput formControlName=\"email\" placeholder=\"Введите вашу электронную почту\">\r\n      <mat-error *ngIf=\"clientForm.controls.email.hasError('email')\">\r\n        Введите правильный адрес электронной почты\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Город регистрации</mat-label>\r\n      <mat-select formControlName=\"registeredCity\" required>\r\n        <mat-option *ngFor=\"let city of citiesValues\" [value]=\"city\">\r\n          {{city}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Семейное положение</mat-label>\r\n      <mat-select formControlName=\"martialStatus\" required>\r\n        <mat-option *ngFor=\"let status of martialStatusValues\" [value]=\"status\">\r\n          {{status}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Гражданство</mat-label>\r\n      <mat-select formControlName=\"citizenship\" required>\r\n        <mat-option *ngFor=\"let ship of citizenshipValues\" [value]=\"ship\">\r\n          {{ship}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Инвалидность</mat-label>\r\n      <mat-select formControlName=\"disability\">\r\n        <mat-option *ngFor=\"let value of disabilityValues\" [value]=\"value\">\r\n          {{value}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-checkbox formControlName=\"retired\">\r\n      Пенсионер\r\n    </mat-checkbox>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Месячный доход</mat-label>\r\n      <input type=\"number\" matInput formControlName=\"monthlyIncome\" placeholder=\"Введите ваш месячный доход\">\r\n    </mat-form-field>\r\n\r\n  </form>\r\n</div>\r\n\r\n<div mat-dialog-actions fxLayout=\"row\"\r\n     fxLayoutGap=\"10px\"\r\n     fxLayoutAlign=\"flex-end center\">\r\n  <button mat-button mat-dialog-close>\r\n    Закрыть\r\n  </button>\r\n  <button mat-raised-button color=\"primary\"\r\n          [disabled]=\"!clientForm.valid\"\r\n          (click)=\"performAction()\"\r\n          *ngIf=\"mode !== MODES.INFO\">\r\n    <span>{{mode === MODES.CREATE ? 'Создать' : 'Изменить' }}</span>\r\n  </button>\r\n</div>\r\n","export enum SEXES {\r\n  MALE = 'муж',\r\n  FEMALE = 'жен'\r\n}\r\n\r\nexport enum CITIES {\r\n  MINSK = 'Минск',\r\n  VITEBSK = 'Витебск',\r\n  ORSHA = 'Орша',\r\n  MOGILEV = 'Могилёв',\r\n  GOMEL = 'Гомель',\r\n  BREST = 'Брест',\r\n  GRODNO = 'Гродно'\r\n}\r\n\r\nexport enum MARTIAL_STATUS {\r\n  MARRIED = 'Женат/Замужем',\r\n  SINGLE = 'Не женат/Не замужем',\r\n  DIVORCED = 'Разведён/Разведена',\r\n  WIDOWED = 'Вдовец/Вдова'\r\n}\r\n\r\nexport enum CITIZENSHIP {\r\n  RB = 'РБ',\r\n  RF = 'РФ'\r\n}\r\n\r\nexport enum DISABILITY {\r\n  FIRST_G = '1 группа',\r\n  SECOND_G = '2 группа',\r\n  THIRD_G = '3 группа'\r\n}\r\n\r\nexport enum MODES {\r\n  CREATE,\r\n  EDIT,\r\n  INFO\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {IClient} from '../interfaces/clients.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n  private readonly BASE_URL = 'https://bank-list-app.herokuapp.com';\r\n\r\n  constructor(private readonly http: HttpClient) { }\r\n\r\n  getClients(): Observable<IClient[]> {\r\n    return this.http.get<IClient[]>(this.BASE_URL);\r\n  }\r\n\r\n  createClient(data: IClient): Observable<IClient> {\r\n    return this.http.post<IClient>(this.BASE_URL, data);\r\n  }\r\n\r\n  deleteClient(clientId: string): Observable<any> {\r\n    return this.http.delete(`${this.BASE_URL}/${clientId}`);\r\n  }\r\n\r\n  updateClient(clientId: string, data: IClient): Observable<IClient> {\r\n    return this.http.put<IClient>(`${this.BASE_URL}/${clientId}`, { data });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}